#	$FreeBSD: src/share/examples/pf/pf.conf,v 1.1.2.1.6.1 2009/04/15 03:14:26 kensmith Exp $
#	$OpenBSD: pf.conf,v 1.34 2007/02/24 19:30:59 millert Exp $
#
# See pf.conf(5) and /usr/share/examples/pf for syntax and examples.
# Remember to set net.inet.ip.forwarding=1 and/or net.inet6.ip6.forwarding=1
# in /etc/sysctl.conf if packets are to be forwarded between interfaces.
#
# to check:
#
# sudo pfctl -vnf /etc/pf.conf
#
# to install
#
# sudo pfctl -F all -f /etc/pf.conf
# to install w/out flushing: sudo pfctl -f /etc/pf.conf

ext_if="em0"
int_if="em1"

int_ip="10.0.0.1"
int_net="10.0.0.0/24"

icmp_types_ext_if="{ echoreq }" # ping
icmp6_types="{ 2, 128 }" # packet too big, echo request (ping6)
# Neighbor Discovery Protocol (NDP) (types 133-137):
#   Router Solicitation (RS), Router Advertisement (RA)
#   Neighbor Solicitation (NS), Neighbor Advertisement (NA)
#   Route Redirection
icmp6_types_ext_if="{ 128, 133, 134, 135, 136, 137 }"
tcp46_services="{ 22 }" # ssh; we allow this in for ALL machines for TCP[46]
tcp46_services_ext_if="{ 80, 443, 53331 }" # HTTP, HTTPS, Random high port
udp_services_ext_if="{ 53331 }" # Random high port
udp6_services_ext_if="{ 546 }" # 546 == dhcpv6-client

# options
set block-policy return
set loginterface $ext_if
set skip on lo

# scrub
scrub in

# nat/rdr
nat on $ext_if from $int_net -> ( $ext_if ) static-port
nat-anchor "ftp-proxy/*"
rdr-anchor "ftp-proxy/*"
# UPnPd rdr anchor
rdr-anchor "miniupnpd"

# Anchors: ftp & miniupnp
anchor "ftp-proxy/*"
anchor "miniupnpd"

antispoof quick for { lo $int_if $ext_if }

pass in quick on $int_if
pass out quick keep state

pass in quick on $ext_if inet proto tcp from any to ( $ext_if ) \
   port $tcp46_services flags S/SA keep state (max-src-conn 10, max-src-conn-rate 10/60)
pass in quick on $ext_if inet proto tcp from any to ( $ext_if ) \
   port $tcp46_services_ext_if flags S/SA keep state (max-src-conn 10, max-src-conn-rate 10/60)
pass in quick on $ext_if inet proto udp from any to ( $ext_if ) \
   port $udp_services_ext_if keep state

pass in quick inet proto icmp all icmp-type $icmp_types_ext_if keep state

# IPv6
pass in quick on $ext_if inet6 proto ipv6-icmp icmp6-type \
	$icmp6_types keep state
pass in quick on $ext_if inet6 proto ipv6-icmp from any to \
	($ext_if ) icmp6-type $icmp6_types_ext_if keep state
pass in quick on $ext_if inet6 proto tcp from any \
  to any port $tcp46_services flags S/SA keep state
pass in quick on $ext_if inet6 proto tcp from any to \
	( $ext_if ) port $tcp46_services_ext_if flags S/SA \
	keep state
pass in quick on $ext_if inet6 proto udp from any to \
	( $ext_if ) port $udp6_services_ext_if keep state

# default deny
block in log
